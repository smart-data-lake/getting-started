
dataObjects {
  ext-airports {
    type = WebserviceFileDataObject
    # uses redirects to the URL below
    url = "https://ourairports.com/data/airports.csv"
    followRedirects = true
    readTimeoutMs=200000
  }

  stg-airports {
    type = CsvDataObject
    path = "~{id}"
    metadata {
      name = "Staging file of Airport location data"
      description = "contains beside GPS coordiantes, elevation, continent, country, region"
      layer = "staging"
      subjectArea = "airports"
      tags = ["aviation", "airport", "location"]
    }
  }

  int-airports {
    type = DeltaLakeTableDataObject
    path = "~{id}"
    table {
      db = "default"
      name = "int_airports"
      primaryKey = [ident]
    }
    metadata {
      name = "Airport locations"
      description = "airport names and locations"
      layer = "integration"
      subjectArea = "airports"
      tags = ["aviation", "airport", "location"]
    }
  }
}

actions {
  download-airports {
    type = FileTransferAction
    inputId = ext-airports
    outputId = stg-airports
    metadata {
      name = "Airport injection"
      description = "download airport data and write into CSV"
      tags = ["download", "websource"]
      feed = airport
    }
  }

  historize-airports {
    type = HistorizeAction
    inputId = stg-airports
    outputId = int-airports
    transformers = [{
      type = SQLDfTransformer
      code = "select ident, name, latitude_deg, longitude_deg from stg_airports"
    }]
    metadata {
      name = "Airport historization and filter"
      description = "Filter name and coordinates of airports and hisorize data"
      tags = ["historize", "filter", "DeltaLake"]
      feed = airport
    }
  }
}
