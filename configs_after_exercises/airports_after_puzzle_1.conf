
dataObjects {
  ext_airports {
    type = WebserviceFileDataObject
    url = "https://davidmegginson.github.io/ourairports-data/airports.csv"
    followRedirects = true
    timeouts {
      connectionTimeoutMs = 3000
    readTimeoutMs=200000
  }

  stg_airports {
    type = CsvFileDataObject
    path = "data/~{id}"
    csvOptions {
      mode=failfast #this will prevent people from reading a csv with semicolon delimiter and getting a very strange error
    }
  }

  int_airports {
      type = DeltaLakeTableDataObject
      path = "data/~{id}"
      table {
          db = "default"
          name = "int_airports"
          primaryKey = [ident]
      }
  }

  btl_airports_elevation {
    type = CsvFileDataObject
    path = "data/~{id}"
    csvOptions {
      mode=failfast
    }
  }
}

actions {

 download-airports {
   type = FileTransferAction
   inputId = ext_airports
   outputId = stg_airports
 }

  export-airport-elevations {
    type = CopyAction
    inputId = stg_airports
    outputId = btl_airports_elevation
    transformers = [{
      type = SQLDfTransformer
      code = "select name, elevation_ft, (elevation_ft / 3.281) as elevation_meters from stg_airports" #Tricky, do not use comma but decimal point ;-)
    }]
  }

  historize-airports {
    type = HistorizeAction
    inputId = stg_airports
    outputId = int_airports
    transformers = [{
      type = SQLDfTransformer
      code = "select ident, name, latitude_deg, longitude_deg from stg_airports"
    }]
  }
}
